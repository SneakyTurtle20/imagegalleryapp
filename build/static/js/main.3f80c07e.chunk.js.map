{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAwCeA,EAtCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAClCH,UAAU,WACV,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6CAAf,YAEYH,EAAMO,MAElB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACCR,EAAMS,WAET,4BACE,2CACCT,EAAMU,SAIb,yBAAKP,UAAU,aACZF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OAAgB,0BAAMC,IAAKD,EAAOV,UAAU,8FAA5B,IAExBS,SCHKG,EA1BK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAQpC,OACE,yBAAKhB,UAAU,kDACb,0BAAMiB,SAPO,SAACC,GAChBA,EAAEC,iBACFN,EAAWE,IAKiBf,UAAU,mBAClC,yBAAKA,UAAU,8DACb,2BAAOoB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQtB,UAAU,oHAEzDuB,KAAK,OAAOC,YAAY,yBACxB,4BAAQxB,UAAU,sIAECuB,KAAK,UAFxB,cCsBKE,MAnCf,WAAgB,IAAD,EAEeX,mBAAS,IAFxB,mBAENY,EAFM,KAEEC,EAFF,OAGqBb,oBAAS,GAH9B,mBAGNc,EAHM,KAGKC,EAHL,OAIWf,mBAAS,IAJpB,mBAINgB,EAJM,KAIAC,EAJA,KAiBb,OAXAC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAC2BJ,EAD3B,kCAEFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,yBAAK9B,UAAU,qBACb,kBAAC,EAAD,CAAaa,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAEzCa,GAA+B,IAAlBF,EAAOkB,QACrB,wBAAI5C,UAAU,sCAAd,mBAEA4B,EAAY,wBAAI5B,UAAU,sCAAd,cAAqE,yBAAKA,UAAU,0BAC9F0B,EAAOlB,KAAI,SAAAX,GAAK,OACf,kBAAC,EAAD,CAAWc,IAAKd,EAAMgD,GAAIhD,MAAOA,UC1B3CiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3f80c07e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageCard = ({image}) => {\r\n  const tags = image.tags.split(',');\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} alt=\"\" \r\n      className=\"w-full\"/>\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 \r\n        text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => <span key={index} className=\"inline-block bg-gray-200 rounded-full\r\n        px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"> \r\n        #{tag}\r\n        </span>\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n  const [text, setText] = useState('');\r\n  \r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(text);\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n          <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full\r\n          text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" \r\n          type=\"text\" placeholder=\"Search Image Term...\"/>\r\n          <button className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700\r\n          border-teal-500 hover:border-teal-700 text-sm border-4 text-white\r\n          py-1 px-2 rounded\" type=\"submit\">\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ImageCard from './components/ImageCard';\r\nimport ImageSearch from './components/ImageSearch';\r\n\r\nfunction App() {\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [term, setTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`https://pixabay.com/api/?key=${process.env\r\n    .REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setImages(data.hits);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, [term]);\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n      <ImageSearch searchText={(text) => setTerm(text)} />\r\n\r\n      {!isLoading && images.length === 0 &&\r\n       <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>} \r\n       \r\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-3\">\r\n        {images.map(image => (\r\n          <ImageCard key={image.id} image={image}/>\r\n        ))}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/main.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}